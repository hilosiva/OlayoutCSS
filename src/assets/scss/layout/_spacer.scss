@charset 'UTF-8';
@use "sass:math";
@use "../global" as *;
/*
  Spacer
-----------------------------------------------------*/
// Padding
// ----------------------------
[data-p] {
  --#{$prefix}-pt: 0;
  --#{$prefix}-pr: 0;
  --#{$prefix}-pb: 0;
  --#{$prefix}-pl: 0;

  padding: var(--#{$prefix}-pt) var(--#{$prefix}-pr) var(--#{$prefix}-pb) var(--#{$prefix}-pl);
}
[data-m] {
  --#{$prefix}-mt: 0;
  --#{$prefix}-mr: 0;
  --#{$prefix}-mb: 0;
  --#{$prefix}-ml: 0;

  margin: var(--#{$prefix}-mt) var(--#{$prefix}-mr) var(--#{$prefix}-mb) var(--#{$prefix}-ml);
}

[data-m~="auto"] {
  --#{$prefix}-mt: auto;
  --#{$prefix}-mr: auto;
  --#{$prefix}-mb: auto;
  --#{$prefix}-ml: auto;
}

[data-m~="y-auto"] {
  --#{$prefix}-mt: auto;
  --#{$prefix}-mb: auto;
}
[data-m~="x-auto"] {
  --#{$prefix}-ml: auto;
  --#{$prefix}-mr: auto;
}
[data-m~="t-auto"] {
  --#{$prefix}-mt: auto;
}
[data-m~="b-auto"] {
  --#{$prefix}-mb: auto;
}
[data-m~="l-auto"] {
  --#{$prefix}-ml: auto;
}
[data-m~="r-auto"] {
  --#{$prefix}-mr: auto;
}

@for $i from 0 through $space-range {
  [data-p~="#{$i}"] {
    --#{$prefix}-pt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-pr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-pb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-pl: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  [data-p~="y-#{$i}"] {
    --#{$prefix}-pt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-pb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  [data-p~="t-#{$i}"] {
    --#{$prefix}-pt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  [data-p~="b-#{$i}"] {
    --#{$prefix}-pb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  [data-p~="x-#{$i}"] {
    --#{$prefix}-pl: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-pr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  [data-p~="l-#{$i}"] {
    --#{$prefix}-pl: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  [data-p~="r-#{$i}"] {
    --#{$prefix}-pr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  // Margin
  // ----------------------------

  [data-m~="#{$i}"] {
    --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  [data-m~="y-#{$i}"] {
    --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  @if $i != 0 {
    [data-m~="y--#{$i}"] {
      --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
      --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
    }
  }

  [data-m~="t-#{$i}"] {
    --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  @if $i != 0 {
    [data-m~="t--#{$i}"] {
      --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
    }
  }

  [data-m~="b-#{$i}"] {
    --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  @if $i != 0 {
    [data-m~="b--#{$i}"] {
      --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
    }
  }

  [data-m~="x-#{$i}"] {
    --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  @if $i != 0 {
    [data-m~="x--#{$i}"] {
      --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
      --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
    }
  }

  [data-m~="l-#{$i}"] {
    --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  @if $i != 0 {
    [data-m~="l--#{$i}"] {
      --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
    }
  }

  [data-m~="r-#{$i}"] {
    --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }

  @if $i != 0 {
    [data-m~="r--#{$i}"] {
      --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
    }
  }

  // space
  // ----------------------------
  [data-space] > * + * {
    margin-top: var(--#{$prefix}-space-y, 0);
    margin-left: var(--#{$prefix}-space-x, 0);
  }

  [data-space~="x-#{$i}"] > * + * {
    --#{$prefix}-space-x: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }
  [data-space~="y-#{$i}"] > * + * {
    --#{$prefix}-space-y: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
  }
}

@each $device, $breakpoint in $breakpoints {
  @include mq($device) {
    // Margin
    // ----------------------------
    [data-m~="#{$device}:auto"] {
      --#{$prefix}-mt: auto;
      --#{$prefix}-mr: auto;
      --#{$prefix}-mb: auto;
      --#{$prefix}-ml: auto;
    }

    [data-m~="#{$device}:y-auto"] {
      --#{$prefix}-mt: auto;
      --#{$prefix}-mb: auto;
    }

    [data-m~="#{$device}:x-auto"] {
      --#{$prefix}-ml: auto;
      --#{$prefix}-mr: auto;
    }

    [data-m~="#{$device}:t-auto"] {
      --#{$prefix}-mt: auto;
    }
    [data-m~="#{$device}:b-auto"] {
      --#{$prefix}-mb: auto;
    }
    [data-m~="#{$device}:l-auto"] {
      --#{$prefix}-ml: auto;
    }

    [data-m~="#{$device}:r-auto"] {
      --#{$prefix}-mr: auto;
    }

    @for $i from 0 through $space-range {
      // Padding
      // ----------------------------
      [data-p~="#{$device}:#{$i}"] {
        --#{$prefix}-pt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-pr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-pb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-pl: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      [data-p~="#{$device}:y-#{$i}"] {
        --#{$prefix}-pt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-pb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      [data-p~="#{$device}:t-#{$i}"] {
        --#{$prefix}-pt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      [data-p~="#{$device}:b-#{$i}"] {
        --#{$prefix}-pb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      [data-p~="#{$device}:x-#{$i}"] {
        --#{$prefix}-pl: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-pr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      [data-p~="#{$device}:l-#{$i}"] {
        --#{$prefix}-pl: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      [data-p~="#{$device}:r-#{$i}"] {
        --#{$prefix}-pr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      [data-m~="#{$device}:#{$i}"] {
        --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      [data-m~="#{$device}:y-#{$i}"] {
        --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      @if $i != 0 {
        [data-m~="#{$device}:y--#{$i}"] {
          --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
          --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
        }
      }

      [data-m~="#{$device}:t-#{$i}"] {
        --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      @if $i != 0 {
        [data-m~="#{$device}:t--#{$i}"] {
          --#{$prefix}-mt: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
        }
      }

      [data-m~="#{$device}:b-#{$i}"] {
        --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      @if $i != 0 {
        [data-m~="#{$device}:b--#{$i}"] {
          --#{$prefix}-mb: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
        }
      }

      [data-m~="#{$device}:x-#{$i}"] {
        --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      @if $i != 0 {
        [data-m~="#{$device}:x--#{$i}"] {
          --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
          --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
        }
      }

      [data-m~="#{$device}:l-#{$i}"] {
        --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      @if $i != 0 {
        [data-m~="#{$device}:l--#{$i}"] {
          --#{$prefix}-ml: calc(var(--#{$prefix}-space) * #{$i} / 16 * -1rem);
        }
      }

      [data-m~="#{$device}:r-#{$i}"] {
        --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }

      @if $i != 0 {
        [data-m~="#{$device}:r--#{$i}"] {
          --#{$prefix}-mr: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
        }
      }

      // space
      // ----------------------------
      [data-space~="#{$device}:x-#{$i}"] > * + * {
        --#{$prefix}-space-x: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }
      [data-space~="#{$device}:y-#{$i}"] > * + * {
        --#{$prefix}-space-y: calc(var(--#{$prefix}-space) * #{$i} / 16 * 1rem);
      }
    }
  }
}
