@charset "UTF-8";
@use "sass:math";
@use "../global" as *;
//====================================
//  Grid
//====================================

.#{$prefix}-grid {
  $this: &;
  --ol-grid-columns: #{$column};
  display: grid;
  grid-template-columns: repeat(var(--ol-grid-columns), minmax(0, 1fr));
  margin: 0;
  padding: 0;

  // Columns
  // ----------------------------
  @each $device, $breakpoint in $breakpoints {
    @media screen and (min-width: $breakpoint) {
      @for $i from 1 through $column {
        &[data-columns~="#{$device}:#{$i}"] {
          --ol-grid-columns: #{$i};
          grid-template-columns: repeat(var(--ol-grid-columns), minmax(0, 1fr));
        }
      }
    }
  }

  // Direction
  // ----------------------------
  @each $device, $breakpoint in $breakpoints {
    @media screen and (min-width: $breakpoint) {
      &[data-dir="#{$device}:normal"] {
        flex-direction: row;
      }
      &[data-dir="#{$device}:reverse"] {
        flex-direction: row-reverse;
      }
    }
  }

  // Alignment
  // ----------------------------
  @each $device, $breakpoint in $breakpoints {
    @media screen and (min-width: $breakpoint) {
      &[data-align~="#{$device}:start"] {
        justify-content: start;
      }

      &[data-align~="#{$device}:center"] {
        justify-content: center;
      }

      &[data-align~="#{$device}:end"] {
        justify-content: end;
      }

      &[data-align~="#{$device}:justify"] {
        justify-content: space-between;
      }

      &[data-align~="#{$device}:top"] {
        align-items: start;
      }

      &[data-align~="#{$device}:middle"] {
        align-items: center;
      }

      &[data-align~="#{$device}:bottom"] {
        align-items: end;
      }
    }
  }

  // Wrap
  // ----------------------------
  @each $device, $breakpoint in $breakpoints {
    @media screen and (min-width: $breakpoint) {
      &[data-wrap~="#{$device}:wrap"] {
        flex-wrap: wrap;
      }

      &[data-wrap~="#{$device}:nowrap"] {
        flex-wrap: nowrap;
      }
    }
  }

  &__item {
    display: flex;
    flex-direction: column;
    margin: 0;

    // Alignment
    // ----------------------------
    @each $device, $breakpoint in $breakpoints {
      @media screen and (min-width: $breakpoint) {
        &[data-align~="#{$device}:start"] {
          align-items: flex-start;
        }

        &[data-align~="#{$device}:center"] {
          align-items: center;
        }

        &[data-align~="#{$device}:end"] {
          align-items: flex-end;
        }

        &[data-align~="#{$device}:top"] {
          justify-content: flex-start;
        }

        &[data-align~="#{$device}:middle"] {
          justify-content: center;
        }

        &[data-align~="#{$device}:bottom"] {
          justify-content: flex-end;
        }
      }
    }
  }

  // Grid
  // ----------------------------
  @each $device, $breakpoint in $breakpoints {
    @media screen and (min-width: $breakpoint) {
      @each $size, $val in $spaces {
        &[data-gutter~="#{$device}:#{$size}"] {
          --gap: calc(var(--#{$prefix}-space-#{$size}) / 16 * 1rem);
          gap: var(--gap);
        }
      }

      &__item {
        @for $i from 1 through $column {
          &[data-cols~="#{$device}:#{$i}"] {
            grid-column: span $i / span $i;
          }
        }

        &[data-cols~="#{$device}:auto"] {
          grid-column: auto;
        }

        @for $i from 0 through 3 {
          &[data-order~="#{$device}:#{$i}"] {
            order: $i;
          }
          &[data-grow~="#{$device}:#{$i}"] {
            flex-grow: $i;
          }
        }

        // Over Container
        // ----------------------------
        &[data-over~="#{$device}:left"] {
          margin-left: calc(50% - 50vw + calc(var(--#{$prefix}-scrollbar-width) * 1px));
          flex-grow: 1;

          #{$this}[data-gutter] & {
            border-left-width: 0;
          }
        }
        &[data-over~="#{$device}:right"] {
          margin-right: calc(50% - 50vw + calc(var(--#{$prefix}-scrollbar-width) * 1px));
          flex-grow: 1;

          #{$this}[data-gutter] & {
            border-right-width: 0;
          }
        }
        &[data-over~="#{$device}:clearLeft"] {
          margin-left: 0;

          #{$this}[data-gutter] & {
            border-left-width: var(--gap);
          }
        }
        &[data-over~="#{$device}:clearRight"] {
          margin-right: 0;

          #{$this}[data-gutter] & {
            border-right-width: var(--gap);
          }
        }
        &[data-over~="#{$device}:clearLeft"][data-over~="#{$device}:clearRight"] {
          flex-grow: 0;
        }
      }
    }
  }
}
