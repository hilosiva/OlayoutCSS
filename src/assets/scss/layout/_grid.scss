@charset "UTF-8";
@use "sass:math";
@use "../global" as *;

// ====================================
//  Grid
// ====================================

[data-grid] {
  display: grid;
  grid-template-columns: var(--#{$prefix}-grid-cols, unset);
  grid-template-rows: var(--#{$prefix}-grid-rows, unset);
  grid-auto-flow: var(--#{$prefix}-grid-flow, unset);
  grid-auto-columns: var(--#{$prefix}-grid-auto-cols, unset);
  grid-auto-rows: var(--#{$prefix}-grid-auto-rows, unset);
}

// Display
// ----------------------------

[data-grid~="unset"] {
  display: revert;
}

[data-grid~="block"] {
  display: grid;
}

@each $device, $breakpoint in $breakpoints {
  @include mq($device) {
    [data-grid~="#{$device}:unset"] {
      display: revert;
    }

    [data-grid~="#{$device}:block"] {
      display: grid;
    }
  }
}

// Flow
// ----------------------------
[data-grid~="flow-col"] {
  --#{$prefix}-grid-flow: column;
}
[data-grid~="flow-row"] {
  --#{$prefix}-grid-flow: row;
}
[data-grid~="flow-dense"] {
  --#{$prefix}-grid-flow: dense;
}
[data-grid~="flow-row-dense"] {
  --#{$prefix}-grid-flow: row dense;
}
[data-grid~="flow-col-dense"] {
  --#{$prefix}-grid-flow: column dense;
}
@each $device, $breakpoint in $breakpoints {
  [data-grid~="#{$device}:flow-col"] {
    --#{$prefix}-grid-flow: column;
  }
  [data-grid~="#{$device}:flow-row"] {
    --#{$prefix}-grid-flow: row;
  }
  [data-grid~="#{$device}:flow-dense"] {
    --#{$prefix}-grid-flow: dense;
  }
  [data-grid~="#{$device}:flow-row-dense"] {
    --#{$prefix}-grid-flow: row dense;
  }
  [data-grid~="#{$device}:flow-col-dense"] {
    --#{$prefix}-grid-flow: column dense;
  }
}

// Columns
// ----------------------------

// template
[data-grid~="cols-none"] {
  --#{$prefix}-grid-cols: none;
}

@for $i from 1 through $column {
  [data-grid~="cols-#{$i}"] {
    --#{$prefix}-grid-cols: repeat(#{$i}, minmax(0, 1fr));
  }
}

@each $device, $breakpoint in $breakpoints {
  [data-grid~="#{$device}:cols-none"] {
    --#{$prefix}-grid-cols: none;
  }

  @include mq($device) {
    @for $i from 1 through $column {
      [data-grid~="#{$device}:cols-#{$i}"] {
        --#{$prefix}-grid-cols: repeat(#{$i}, minmax(0, 1fr));
      }
    }
  }
}

// auto

// [data-grid~="cols-auto"] {
//   --#{$prefix}-grid-auto-cols: auto;
// }
// [data-grid~="cols-fr"] {
//   --#{$prefix}-grid-auto-cols: minmax(0, 1fr);
// }
// [data-grid~="cols-min"] {
//   --#{$prefix}-grid-auto-cols: min-content;
// }
// [data-grid~="cols-max"] {
//   --#{$prefix}-grid-auto-cols: max-content;
// }

// @each $device, $breakpoint in $breakpoints {
//   [data-grid~="#{$device}:cols-auto"] {
//     --#{$prefix}-grid-auto-cols: auto;
//   }
//   [data-grid~="#{$device}:cols-fr"] {
//     --#{$prefix}-grid-auto-cols: minmax(0, 1fr);
//   }
//   [data-grid~="#{$device}:cols-min"] {
//     --#{$prefix}-grid-auto-cols: min-content;
//   }
//   [data-grid~="#{$device}:cols-max"] {
//     --#{$prefix}-grid-auto-cols: max-content;
//   }
// }

// Rows
// ----------------------------
[data-grid~="rows-none"] {
  --#{$prefix}-grid-rows: none;
}

@for $i from 1 through $row {
  [data-grid~="rows-#{$i}"] {
    --#{$prefix}-grid-rows: repeat(#{$i}, minmax(0, 1fr));
  }
}

@each $device, $breakpoint in $breakpoints {
  [data-grid~="#{$device}:rows-none"] {
    --#{$prefix}-grid-rows: none;
  }

  @include mq($device) {
    @for $i from 1 through $row {
      [data-grid~="#{$device}:rows-#{$i}"] {
        --#{$prefix}-grid-rows: repeat(#{$i}, minmax(0, 1fr));
      }
    }
  }
}

// auto

// [data-grid~="rows-auto"] {
//   --#{$prefix}-grid-auto-rows: auto;
// }
// [data-grid~="rows-fr"] {
//   --#{$prefix}-grid-auto-rows: minmax(0, 1fr);
// }
// [data-grid~="rows-min"] {
//   --#{$prefix}-grid-auto-rows: min-content;
// }
// [data-grid~="rows-max"] {
//   --#{$prefix}-grid-auto-rows: max-content;
// }

// @each $device, $breakpoint in $breakpoints {
//   [data-grid~="#{$device}:rows-auto"] {
//     --#{$prefix}-grid-auto-rows: auto;
//   }
//   [data-grid~="#{$device}:rows-fr"] {
//     --#{$prefix}-grid-auto-rows: minmax(0, 1fr);
//   }
//   [data-grid~="#{$device}:rows-min"] {
//     --#{$prefix}-grid-auto-rows: min-content;
//   }
//   [data-grid~="#{$device}:rows-max"] {
//     --#{$prefix}-grid-auto-rows: max-content;
//   }
// }

// // Offset
// // ----------------------------

// [data-grid-offset~="small"] {
//   --#{$prefix}-grid-template-colmns: var(--#{$prefix}-sm-offset) repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr)) var(--#{$prefix}-sm-offset);
// }
// [data-grid-offset~="medium"] {
//   --#{$prefix}-grid-template-colmns: var(--#{$prefix}-md-offset) repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr)) var(--#{$prefix}-md-offset);
// }
// [data-grid-offset~="large"] {
//   --#{$prefix}-grid-template-colmns: var(--#{$prefix}-lg-offset) repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr)) var(--#{$prefix}-lg-offset);
// }
// [data-grid-offset~="xlarge"] {
//   --#{$prefix}-grid-template-colmns: var(--#{$prefix}-xl-offset) repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr)) var(--#{$prefix}-xl-offset);
// }
// [data-grid-offset~="none"] {
//   --#{$prefix}-grid-template-colmns: repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr));
// }

// @each $device, $breakpoint in $breakpoints {
//   @include mq($device) {
//     [data-grid-offset~="#{$device}:small"] {
//       --#{$prefix}-grid-template-colmns: var(--#{$prefix}-sm-offset) repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr)) var(--#{$prefix}-sm-offset);
//     }
//     [data-grid-offset~="#{$device}:medium"] {
//       --#{$prefix}-grid-template-colmns: var(--#{$prefix}-md-offset) repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr)) var(--#{$prefix}-md-offset);
//     }
//     [data-grid-offset~="#{$device}:large"] {
//       --#{$prefix}-grid-template-colmns: var(--#{$prefix}-lg-offset) repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr)) var(--#{$prefix}-lg-offset);
//     }
//     [data-grid-offset~="#{$device}:xlarge"] {
//       --#{$prefix}-grid-template-colmns: var(--#{$prefix}-xl-offset) repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr)) var(--#{$prefix}-xl-offset);
//     }
//     [data-grid-offset~="#{$device}:none"] {
//       --#{$prefix}-grid-template-colmns: repeat(var(--#{$prefix}-grid-cols), minmax(0, 1fr));
//     }
//   }
// }

// Column
// ----------------------------
@for $i from 1 through $column {
  [data-grid-item~="col-#{$i}"] {
    grid-column: span $i / span $i;
  }

  [data-grid-item~="col-start-#{$i}"] {
    grid-column-start: $i;
  }

  [data-grid-item~="col-end-#{$i}"] {
    grid-column-end: $i;
  }
}

[data-grid-item~="col-full"] {
  grid-column: 1 / -1;
}

[data-grid-item~="col-auto"] {
  grid-column: auto;
}

[data-grid-item~="col-start-auto"] {
  grid-column-start: auto;
}

[data-grid-item~="col-end-auto"] {
  grid-column-end: auto;
}

@each $device, $breakpoint in $breakpoints {
  @include mq($device) {
    @for $i from 1 through $column {
      [data-grid-item~="#{$device}:col-#{$i}"] {
        grid-column: span $i / span $i;
      }

      [data-grid-item~="#{$device}:col-start-#{$i}"] {
        grid-column-start: $i;
      }

      [data-grid-item~="#{$device}:col-end#{$i}"] {
        grid-column-end: $i;
      }
    }

    [data-grid-item~="#{$device}:col-full"] {
      grid-column: 1 / -1;
    }

    [data-grid-item~="#{$device}:col-auto"] {
      grid-column: auto;
    }

    [data-grid-item~="#{$device}:col-start-auto"] {
      grid-column-start: auto;
    }

    [data-grid-item~="#{$device}:col-end-auto"] {
      grid-column-end: auto;
    }
  }
}

// Row
// ----------------------------

@for $i from 1 through $row {
  [data-grid-item~="row-#{$i}"] {
    grid-row: span $i / span $i;
  }

  [data-grid-item~="row-start-#{$i}"] {
    grid-row-start: $i;
  }

  [data-grid-item~="row-end-#{$i}"] {
    grid-row-end: $i;
  }
}

[data-grid-item~="row-full"] {
  grid-row: 1 / -1;
}

[data-grid-item~="row-auto"] {
  grid-row: auto;
}

[data-grid-item~="row-start-auto"] {
  grid-row-start: auto;
}

[data-grid-item~="row-end-auto"] {
  grid-row-end: auto;
}

@each $device, $breakpoint in $breakpoints {
  @include mq($device) {
    @for $i from 1 through $row {
      [data-grid-item~="#{$device}:row-#{$i}"] {
        grid-row: span $i / span $i;
      }

      [data-grid-item~="#{$device}:row-start-#{$i}"] {
        grid-row-start: $i;
      }

      [data-grid-item~="#{$device}:row-end-#{$i}"] {
        grid-row-end: $i;
      }
    }

    [data-grid-item~="#{$device}:row-full"] {
      grid-row: 1 / -1;
    }

    [data-grid-item~="#{$device}:row-auto"] {
      grid-row: auto;
    }

    [data-grid-item~="#{$device}:row-start-auto"] {
      grid-row-start: auto;
    }

    [data-grid-item~="#{$device}:row-end-auto"] {
      grid-row-end: auto;
    }
  }
}
