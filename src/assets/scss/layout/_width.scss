@charset 'UTF-8';
@use "sass:math";
@use "../global" as *;
/*
  Width
----------------------------------------------------- */
[data-width] {
  --#{$prefix}-width: auto;

  width: var(--#{$prefix}-width);
}

[data-width~="auto"] {
  --#{$prefix}-width: auto;
}

@for $i from 1 through $column {
  [data-width~="#{$i}"] {
    --#{$prefix}-width: calc(math.div($i, $column) * 100%);
  }
}

[data-width~="full"] {
  --#{$prefix}-width: 100%;
}

[data-width~="device"] {
  --#{$prefix}-width: 100vw;
}

@each $device, $breakpoint in $breakpoints {
  @include mq($device) {
    @for $i from 1 through $column {
      [data-width~="#{$device}:#{$i}"] {
        --#{$prefix}-width: calc(math.div($i, $column) * 100%);
      }
    }

    [data-width~="#{$device}:auto"] {
      --#{$prefix}-width: auto;
    }

    [data-width~="#{$device}:full"] {
      --#{$prefix}-width: 100%;
    }

    [data-width~="#{$device}:device"] {
      --#{$prefix}-width: 100vw;
    }
  }
}

/*
  Max Width
----------------------------------------------------- */

[data-max-width] {
  --#{$prefix}-max-width: none;

  max-width: var(--#{$prefix}-max-width);
}

[data-max-width~="small"] {
  --#{$prefix}-max-width: calc(var(--#{$prefix}-sm-content-width) * 1px);
}

[data-max-width~="medium"] {
  --#{$prefix}-max-width: calc(var(--#{$prefix}-md-content-width) * 1px);
}

[data-max-width~="large"] {
  --#{$prefix}-max-width: calc(var(--#{$prefix}-lg-content-width) * 1px);
}

[data-max-width~="xlarge"] {
  --#{$prefix}-max-width: calc(var(--#{$prefix}-xl-content-width) * 1px);
}

[data-max-width~="xxlarge"] {
  --#{$prefix}-max-width: calc(var(--#{$prefix}-xxl-content-width) * 1px);
}

[data-max-width~="none"] {
  --#{$prefix}-max-width: none;
}

[data-max-width~="max-content"] {
  --#{$prefix}-max-width: max-content;
}

[data-max-width~="min-content"] {
  --#{$prefix}-max-width: min-content;
}

@each $device, $breakpoint in $breakpoints {
  @include mq($device) {
    [data-max-width~="#{$device}:small"] {
      --#{$prefix}-max-width: calc(var(--#{$prefix}-sm-content-width) * 1px);
    }

    [data-max-width~="#{$device}:medium"] {
      --#{$prefix}-max-width: calc(var(--#{$prefix}-md-content-width) * 1px);
    }

    [data-max-width~="#{$device}:large"] {
      --#{$prefix}-max-width: calc(var(--#{$prefix}-lg-content-width) * 1px);
    }

    [data-max-width~="#{$device}:xlarge"] {
      --#{$prefix}-max-width: calc(var(--#{$prefix}-xl-content-width) * 1px);
    }

    [data-max-width~="#{$device}:xxlarge"] {
      --#{$prefix}-max-width: calc(var(--#{$prefix}-xxl-content-width) * 1px);
    }

    [data-max-width~="#{$device}:none"] {
      --#{$prefix}-max-width: none;
    }

    [data-max-width~="#{$device}:max-content"] {
      --#{$prefix}-max-width: max-content;
    }

    [data-max-width~="#{$device}:min-content"] {
      --#{$prefix}-max-width: min-content;
    }
  }
}

/*
  Min Width
----------------------------------------------------- */
[data-min-width] {
  --#{$prefix}-min-width: auto;

  min-width: var(--#{$prefix}-min-width);
}

[data-min-width~="auto"] {
  --#{$prefix}-min-width: auto;
}

[data-min-width~="max-content"] {
  --#{$prefix}-min-width: max-content;
}

[data-min-width~="min-content"] {
  --#{$prefix}-min-width: min-content;
}

@each $device, $breakpoint in $breakpoints {
  @include mq($device) {
    [data-min-width~="#{$device}:auto"] {
      --#{$prefix}-min-width: auto;
    }

    [data-min-width~="#{$device}:max-content"] {
      --#{$prefix}-min-width: max-content;
    }

    [data-min-width~="#{$device}:min-content"] {
      --#{$prefix}-min-width: min-content;
    }
  }
}
