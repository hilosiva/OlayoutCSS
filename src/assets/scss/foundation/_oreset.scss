@charset 'UTF-8';
@use "sass:math";
@use "../global" as *;
/*! Olayout CSS v1.0.0 | MIT License | https://github.com/hirosiva/Olayout */

/*
  Global
---------------------------------------------- */

/**
 * Settings
 */
@each $device, $breakpoint in $breakpoints {
  @custom-media --#{$prefix}-#{$device} screen and (min-width: #{$breakpoint});
}

:root {
  @each $size, $val in $content-widths {
    --#{$prefix}-#{$size}-content-width: #{$val};
  }

  @each $size, $val in $offsets {
    --#{$prefix}-#{$size}-offset: #{$val};
  }

  @each $size, $val in $comps {
    --#{$prefix}-#{$size}-design-width: #{$val};
  }

  --#{$prefix}-space: #{$space};

  --#{$prefix}-base-color: #fff;
  --#{$prefix}-main-color: #116ec5;
  --#{$prefix}-accent-color: #e4d558;
  --#{$prefix}-light-color: #efefef;
  --#{$prefix}-dark-color: #1c1c1c;
  --#{$prefix}-border-color-1: #dedede;
  --#{$prefix}-border-color-2: #303030;
  --#{$prefix}-border-color-3: #fafafa;
  --#{$prefix}-text-color-1: #101010;
  --#{$prefix}-text-color-2: #606060;
  --#{$prefix}-text-color-3: #f0f0f0;
  --#{$prefix}-font-set-1: -apple-system, BlinkMacSystemFont, "Yu Gothic", sans-serif;
  --#{$prefix}-font-set-2: "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  --#{$prefix}-font-set-3: "Times New Roman", "YuMincho", "Yu Mincho", serif;
  --#{$prefix}-base-line-height: 1.5;
  --#{$prefix}-base-feature-settings: "pkna";
  --#{$prefix}-base-letter-spacing: 0.05em;
  --#{$prefix}-shadow-1: 0 0 16px rgba(0, 0, 0, 0.16);
  --#{$prefix}-shadow-2: 2px 4px 24px -1px rgba(0, 0, 0, 0.1);
  --#{$prefix}-shadow-3: 8px 16px 32px -4px rgba(0, 0, 0, 0.05);
  --#{$prefix}-scroll-behavior: smooth;
  --#{$prefix}-easing: #{$ease-out-expo};
  --#{$prefix}-duration: #{$duration};
  --#{$prefix}-transition: var(--#{$prefix}-duration) var(--#{$prefix}-easing);
  --#{$prefix}-left-offset: 0;
  --#{$prefix}-right-offset: 0;
  --#{$prefix}-view-point: var(--#{$prefix}-sm-design-width);
  @include mq(md) {
    --#{$prefix}-view-point: var(--#{$prefix}-md-design-width);
  }
  @include mq(lg) {
    --#{$prefix}-view-point: var(--#{$prefix}-lg-design-width);
  }
}

/*
  # All
---------------------------------------------- */

*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/*
  # Document & Sections
---------------------------------------------- */
:where(html) {
  block-size: 100%;
  scroll-behavior: var(--#{$prefix}-scroll-behavior);
  -webkit-text-size-adjust: none;
}

:where(body) {
  min-block-size: 100%;
  text-rendering: optimizeLegibility;
  color: var(--#{$prefix}-text-color-1);
  background-color: var(--#{$prefix}-base-color);
  line-height: var(--#{$prefix}-base-line-height);
  font-family: var(--#{$prefix}-font-set-1);
  font-feature-settings: var(--#{$prefix}-base-feature-settings);
  -webkit-font-smoothing: antialiased;
}

/*
  # Grouping content
---------------------------------------------- */
:where(p, h1, h2, h3, h4, h5, h6) {
  overflow-wrap: break-word;
}

:where(hr) {
  border: none;
  border-block-start: 1px solid;
  color: inherit;
  block-size: 0;
  overflow: visible;
}

:where(ul, ol) {
  list-style: none;
}

/*
  # Text-level semantics
---------------------------------------------- */
:where(a:not([class])) {
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto;
}

/*
  # Embedded content
---------------------------------------------- */
:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, picture, svg) {
  max-inline-size: 100%;
  block-size: auto;
}

:where(svg:not([fill])) {
  fill: currentColor;
}

/*
  # Tabular data
---------------------------------------------- */
:where(table) {
  border-collapse: collapse;
}

/*
  # Forms
---------------------------------------------- */
:where(input, button, textarea, select, optgroup) {
  font: inherit;
  color: inherit;
}

:where(textarea) {
  resize: vertical;
  resize: block;
}

:where(button, label, select, summary, [role="button"], [role="option"]) {
  cursor: pointer;
}

:where(input[type="file"])::-webkit-file-upload-button,
:where(input[type="file"])::file-selector-button {
  cursor: pointer;
}

:where(:disabled) {
  cursor: not-allowed;
}

:where(label:has(> input:disabled), label:has(+ input:disabled)) {
  cursor: not-allowed;
}

:where(button) {
  border-style: solid;
}

/*
  # Interactive & Misc
---------------------------------------------- */
:where(template, [hidden]:not([hidden="until-found"])) {
  display: none;
}

/*
  # Accessibility
---------------------------------------------- */
:where([disabled], [aria-disabled="true"]) {
  cursor: not-allowed;
}

:where([aria-busy="true"]) {
  cursor: progress;
}

:where([aria-controls]) {
  cursor: pointer;
}

:where([aria-hidden="false"][hidden]) {
  display: initial;
}

:where([aria-hidden="false"][hidden]):not(:focus) {
  position: absolute;
  clip: rect(0, 0, 0, 0);
}

:where(:focus:not(:focus-visible), ::before:focus:not(:focus-visible), ::after:focus:not(:focus-visible)) {
  outline: none;
}

/**
 * Prettier ignore
 */
@media (prefers-reduced-motion: reduce) {
  *,
  *:before,
  *:after {
    transition: none !important;
    animation: none !important;
    scroll-behavior: auto !important;
  }
}
/**
 * Checker
 */
button:not([type]):after {
  content: "【警告】このbuttonにはtype属性がありません";
  background-color: red;
  color: #fff;

  form & {
    content: none;
    background-color: transparent;
    color: inherit;
  }
}
